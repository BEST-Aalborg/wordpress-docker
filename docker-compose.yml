# ex: set tabstop=8 softtabstop=0 expandtab shiftwidth=2 smarttab:
---
version: '3.3'

services:
  mariadb:
    image: mariadb
    restart: always
    volumes:
      - mariadb:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

  mariadb-updater:
    image: mariadb
    entrypoint: 'mysql_upgrade --host=mariadb --user root "--password=${MYSQL_ROOT_PASSWORD}" || true'
    depends_on:
      - mariadb
    volumes:
      - mariadb:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

  wordpress:
    image: wordpress
    restart: always
    depends_on:
      - mariadb
    volumes:
      - wordpress:/var/www/html
      - ./wp-php-custom.ini:/usr/local/etc/php/conf.d/my-conf.ini:ro
    environment:
      - WORDPRESS_DB_HOST=mariadb
      - WORDPRESS_DB_NAME=${MYSQL_DATABASE}
      - WORDPRESS_DB_USER=${MYSQL_USER}
      - WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD}

    ### NOTES for labels:
    # These labels are used to configure the container Traefik (https://doc.traefik.io/traefik/).
    # Traefik is used as our LB (Load Balander) for handling incoming connection and forward them
    # to the correct containers.
    labels:
      # Enable this container to be load balancered by Traefik
      - "traefik.enable=true"

      # Create middleware for redirect all HTTP connections to HTTPS
      - "traefik.http.middlewares.wordpress_redirect_http2https.redirectscheme.scheme=https"
      # Make the redirect permanent
      - "traefik.http.middlewares.wordpress_redirect_http2https.redirectscheme.permanent=true"

      # Select the endpoint from Traefik which is used for incoming connection.
      # Normally the endpoint `web` is going to be on port 80 (HTTP).
      - "traefik.http.routers.wordpress_http.entrypoints=web"
      # List of all the domains there will forwarded to this container
      - "traefik.http.routers.wordpress_http.rule=Host(`best.aau.dk`,`www.best.aau.dk`,`best.varum.dk`)"
      # Select the middleware from Traefik which is used for incoming connection.
      - "traefik.http.routers.wordpress_http.middlewares=wordpress_redirect_http2https"

      # Select the endpoint from Traefik which is used for incoming connection.
      # Normally the endpoint `websecure` is going to be on port 443 (HTTPS).
      - "traefik.http.routers.wordpress_https.entrypoints=websecure"
      # List of all the domains there will forwarded to this container
      - "traefik.http.routers.wordpress_https.rule=Host(`best.aau.dk`,`www.best.aau.dk`,`best.varum.dk`)"
      # Get SSL/TLS certificate from Let's Encrypt by resolving the HTTPS challenge.
      - "traefik.http.routers.wordpress_https.tls.certresolver=http_challenge_resolver"
      # In order to select which port on this container the connections from Traefik should be farwarded to,
      # there needs to be defined a service.
      # This service defineds that we load balancer should farward connections to port 80
      - "traefik.http.services.wordpress_https.loadbalancer.server.port=80"

  app-cron:
    image: wordpress:cli
    entrypoint:
      - bash
      - '-c'
      - wp cv api job.execute auth=0 && sleep 300
    user: '33:33'
    restart: always
    depends_on:
      - mariadb
    volumes:
      - wordpress:/var/www/html
    environment:
      - WORDPRESS_DB_HOST=mariadb
      - WORDPRESS_DB_NAME=${MYSQL_DATABASE}
      - WORDPRESS_DB_USER=${MYSQL_USER}
      - WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD}


volumes:
  wordpress:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/wordpress/wordpress

  mariadb:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/wordpress/mariadb

